// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  name String
  email String
  storeCategories StoreCategory[]
  storeBrands StoreBrand[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  storeCategories StoreCategory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  storeBrands StoreBrand[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StoreCategory {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation(fields: [storeId], references: [id])
  storeId String @db.ObjectId
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StoreBrand {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation(fields: [storeId], references: [id])
  storeId String @db.ObjectId
  brand Brand @relation(fields: [brandId], references: [id])
  brandId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
