// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  name String
  email String
  isDeleted Boolean @default(false)
  colors Color[] 
  categories Category[]
  brands Brand[]
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  store Store @relation(fields: [storeId], references: [id])
  storeId String @db.ObjectId
  isDeleted Boolean @default(false)
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  store Store @relation(fields: [storeId], references: [id])
  storeId String @db.ObjectId
  isDeleted Boolean @default(false)
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  code String
  store Store @relation(fields: [storeId], references: [id])
  storeId String @db.ObjectId
  isDeleted Boolean @default(false)
  productIDs String[] @db.ObjectId
  products Product[] @relation(fields: [productIDs], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String
  store Store @relation(fields: [storeId], references: [id])
  storeId String @db.ObjectId
  brand Brand @relation(fields: [brandId], references: [id])
  brandId String @db.ObjectId
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId
  price Float
  discount Float @default(0)
  quantity Int
  gender String
  sizes SizeEnum[]
  images Image[]
  colorIDs String[] @db.ObjectId
  colors Color[] @relation(fields: [colorIDs], references: [id])
  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  url String
  alt String?
  product Product @relation(fields: [productId], references: [id])
  productId String @db.ObjectId
  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SizeEnum {
  S
  M
  L
  XL
  XXL
}
